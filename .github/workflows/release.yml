# This is a basic workflow to help you get started with Actions

name: Release to NuGet

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  release:
    types: [published]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0.x"
      - name: Create NuGet Package
        run: dotnet pack -c Release /p:Version=${{ github.event.release.tag_name }} /p:PackageReleaseNotes="See https://github.com/Abhith/Code.Library/releases/tag/${{ github.event.release.tag_name }}"
        working-directory: ./src
      - name: Archive Code.Library NuGet Package
        uses: actions/upload-artifact@v1
        with:
          name: Code.Library
          path: ./src/Code.Library/bin/Release/Code.Library.${{ github.event.release.tag_name }}.nupkg
      - name: Archive Code.Library.Application NuGet Package
        uses: actions/upload-artifact@v1
        with:
          name: Code.Library.Application
          path: ./src/Code.Library.Application/bin/Release/Code.Library.Application.${{ github.event.release.tag_name }}.nupkg
      - name: Archive Code.Library.AspNetCore NuGet Package
        uses: actions/upload-artifact@v1
        with:
          name: Code.Library.AspNetCore
          path: ./src/Code.Library.AspNetCore/bin/Release/Code.Library.AspNetCore.${{ github.event.release.tag_name }}.nupkg
      - name: Publish Nuget Package
        run: dotnet nuget push **/*.nupkg --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json --no-symbols true
